-
--
-=
;
:
!==
' '
'use strict';
()
()=>
[]
{}
@
*
**
/
/ /
/* comment */
// comment
/\d+/;
\n
&
&&
#
%
` `
`${ a }`
`result: ${a}`
^
+
++
+=
<
<=
=()=>
===
=>
>
>=
|
||
${}
a,b
array = [];
array.filter((value) => { });
array.forEach((value, index) => { });
array.forEach((value) => { console.log(value);});
array.forEach()
array.map((v) => { });
array.map((v) => { return v * v });
array.map()
array.pop();
array.push('new');
array.reverse();
array.shift();
array.sort((a,b)=> b-a);
array.sort();
array.splice(index,num);
array.unshift(value);
console.info('info');
console.log('result:' + result);
console.log(a);
console.log(new Date());
console.log(result);
const
const a=[];
const Alph_and_Num = /\w/g;
const arr = str.split(',');
const arr = str.split(/\r\n|\r|\n/);
const array = ['a', 'b'];
const array_x_2 = array.map(value => value * 2);
const array2 = array1.slice(1, 4);
const array3 = array1.concat(array2);
const columns = lineString.split(',');
const doreka = /[abc]/g;
const endOfLines = /a$/m;
const entries=  Object.entries(obj);
const firstOfLines = /^a/m;
const fn = () => { };
const fn = (x, y) => { };
const fn = (x) => { };
const fn = x => { };
const fn = x => { return x * 2; };
const fn = x => x * 2;  
const HOST_NAME = 'HOST';
const index = array.indexOf(value);
const keys = Object.keys(obj);
const komoji = /[a-z]/g;
const map = new Map();
const n = 1;
const newArray = array.filter((value, index, array) => { });
const newArray = array.map((a) => { return a * 2; });
const Not_Alph_and_Num = /\W/g;
const not_number = /\D/g;
const not_space = /\S/g;
const now = new Date();
const num = Number(str);
const num = parseInt(str);
const number = /[0-9]/g;
const number = /\d/g;
const numbers3 = /[0-9]{3}/;
const numbers3orMore = /[0-9]{3,}/;
const obj = { name: 'a', age: 12 };
const obj = JSON.parse(json);
const oneOfThem = /[abc]/g;
const oomoji = /[A-Z]/g;
const pos = str.indexOf('a');
const result = array.sort((a, b) => { a - b });
const s = 'a';
const space = /\s/g;
const str = JSON.stringify(obj);
const str = String(num);
const value = true ? 'A' : 'B';
const values = Object.values(obj);
do { } while (x < 10);
false
for (const value of array) { }
for (let i = 0; i < array.length; i++) { }
for (let i = 1; i < 100; i++) { }
for (let i = 1; i <= n; i++) { }
for()
function fn(...args) { }
function fn(n) { }
function myFunc(n) { }
function(){}
i--
i++
if (!a) { }
if (a !== b) { }
if (a && b) { }
if (a < b) { }
if (a <= b) { }
if (a === b) { }
if (a > b) { }
if (a >= b) { }
if (a || (b && c)) {}
if (a || b) { }
if (a) { } else { }
if(array.includes(value)){};
if(i === 0){}
let
let amari = a % b;
let array = ['a', 'b'];
let hikizan = a - b;
let kaijo = a ** b;
let kakezan = a * b;
let n = 1;
let num = 1;
let obj = {};
let result = 1;
let s = 'a';
let tashizan = a + b;
let warizan = a / b;
map.get(key);
map.set(key, value);
newStr = str.slice(1, 5);
null
num++;
obj = {};
obj.method = function() { };
obj.name
return result;
setTimeout(() => { }, delay);
str = str.match(pattern);
str = str.replace(a, b);
str = str.trim();
switch (a) { case 1: break; default: break;}
true
try { } catch (err) { }
var fn = (a, b) => { }
while (x < 10) { x += 1; }
